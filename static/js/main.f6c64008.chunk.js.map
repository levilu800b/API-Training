{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","content","author","tags","response","this","setState","fetch","then","json","updateQuote","join","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA6CeA,G,wDAzCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,OAAQ,GACRC,KAAM,IALS,E,wDASPC,GACVC,KAAKC,SAAS,CACZL,QAASG,EAASH,QAClBC,OAAQE,EAASF,OACjBC,KAAMC,EAASD,S,0CAIE,IAAD,OAClBE,KAAKC,SAAS,CACZL,QAAS,cACTC,OAAQ,GACRC,KAAM,KAGRI,MAAM,kCACHC,MAAK,SAACJ,GAAD,OAAcA,EAASK,UAC5BD,MAAK,SAACJ,GAAD,OAAc,EAAKM,YAAYN,Q,+BAIvC,OACE,qCACE,kDACA,8BAAG,yCAAH,IAAoBC,KAAKL,MAAMC,QAA/B,OACA,8BAAG,wCAAH,IAAmBI,KAAKL,MAAME,OAA9B,OACA,8BAAG,sCAAH,IAAiBG,KAAKL,MAAMG,KAAKQ,KAAK,gB,GApC5BC,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6c64008.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      content: \"\",\n      author: \"\",\n      tags: []\n    }\n  }\n\n  updateQuote(response) {\n    this.setState({\n      content: response.content,\n      author: response.author,\n      tags: response.tags\n    })\n  }\n\n  componentDidMount() {\n    this.setState({\n      content: \"....loading\",\n      author: \"\",\n      tags: []\n    })\n\n    fetch(\"https://api.quotable.io/random\")\n      .then((response) => response.json())\n      .then((response) => this.updateQuote(response))\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Quote of the day</h1>\n        <p><b>Content:</b> {this.state.content} </p>\n        <p><b>Author:</b> {this.state.author} </p>\n        <p><b>Tags:</b> {this.state.tags.join(\", \")}</p>\n      </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}